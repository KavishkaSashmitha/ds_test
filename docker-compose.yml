version: '3.8'

services:
  # MongoDB Service
  mongo:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    networks:
      - microservices_network

  # Authentication Service
  auth-service:
    build: ./backend/auth-service
    restart: always
    ports:
      - "3001:3001"
    environment:
      - MONGODB_URI=mongodb+srv://Kavishka2:TO4lfbskwvdi5eRF@fooddelivery.ouayq.mongodb.net/?retryWrites=true&w=majority&appName=fooddelivery
      - JWT_SECRET=your_secret_key_here
      - NODE_ENV=development
      - LOG_LEVEL=info
    volumes:
      - ./backend/auth-service/logs:/app/logs
    depends_on:
      - mongo
    networks:
      - microservices_network

  # Restaurant Service
  restaurant-service:
    build: ./backend/restaurant-service
    restart: always
    ports:
      - "3002:3002"
    environment:
      - MONGODB_URI=mongodb+srv://Kavishka2:TO4lfbskwvdi5eRF@fooddelivery.ouayq.mongodb.net/?retryWrites=true&w=majority&appName=fooddelivery
      - JWT_SECRET=your_secret_key_here
      - NODE_ENV=development
      - LOG_LEVEL=info
    volumes:
      - ./backend/restaurant-service/logs:/app/logs
    depends_on:
      - mongo
    networks:
      - microservices_network

  # Order Service
  order-service:
    build: ./backend/order-service
    restart: always
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - MONGODB_URI=mongodb+srv://Kavishka2:TO4lfbskwvdi5eRF@fooddelivery.ouayq.mongodb.net/?retryWrites=true&w=majority&appName=fooddelivery
      - JWT_SECRET=your_secret_key_here
      - NODE_ENV=development
      - LOG_LEVEL=info
    volumes:
      - ./backend/order-service/logs:/app/logs
    depends_on:
      - mongo
    networks:
      - microservices_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Delivery Service
  delivery-service:
    build: ./backend/delivery-service
    restart: always
    ports:
      - "3004:3004"
    environment:
      - MONGODB_URI=mongodb+srv://Kavishka2:TO4lfbskwvdi5eRF@fooddelivery.ouayq.mongodb.net/?retryWrites=true&w=majority&appName=fooddelivery
      - JWT_SECRET=your_secret_key_here
      - CLIENT_URL=http://localhost:3000
      - NODE_ENV=development
      - LOG_LEVEL=info
    volumes:
      - ./backend/delivery-service/logs:/app/logs
    depends_on:
      - mongo
    networks:
      - microservices_network

  # API Gateway
  api-gateway:
    build: ./backend/api-gateway
    restart: always
    ports:
      - "8080:8080"
    environment:
      - JWT_SECRET=your_secret_key_here
      - NODE_ENV=development
      - LOG_LEVEL=info
      - USE_DOCKER=true
    volumes:
      - ./backend/api-gateway/logs:/app/logs
    depends_on:
      - auth-service
      - restaurant-service
      - order-service
      - delivery-service
    networks:
      - microservices_network


volumes:
  mongo_data:

networks:
  microservices_network:
    driver: bridge